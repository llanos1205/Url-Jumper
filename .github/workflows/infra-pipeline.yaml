name: Infrastructure
on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - infra/**
      - .github/workflows/infra-pipeline.yml
  pull_request:
    branches: ["main"]
    paths:
      - infra/**
      - .github/workflows/infra-pipeline.yml

jobs:
  plan-dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: tf init
        run: terraform init  -reconfigure --backend-config=key='url_jumper/dev.tfstate'
        working-directory: ./infra/terraform

      - name: tf validate
        run: terraform validate
        working-directory: ./infra/terraform

      - name: tf plan dev
        run: terraform plan  -var-file=./envs/dev.tfvars
        working-directory: ./infra/terraform

  plan-prod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: tf init
        run: terraform init  -reconfigure --backend-config=key='url_jumper/prod.tfstate'
        working-directory: ./infra/terraform

      - name: tf validate
        run: terraform validate
        working-directory: ./infra/terraform

      - name: tf plan dev
        run: terraform plan  -var-file=./envs/prod.tfvars
        working-directory: ./infra/terraform

  apply-dev:
    needs: plan-dev
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: tf init
        run: terraform init  -reconfigure  --backend-config=key='url_jumper/dev.tfstate'
        working-directory: ./infra/terraform

      - name: tf apply dev
        run: terraform apply  -var-file=./envs/dev.tfvars --auto-approve
        working-directory: ./infra/terraform

  apply-prod:
    needs: plan-prod
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: tf init
        run: terraform init  -reconfigure  --backend-config=key='url_jumper/prod.tfstate'
        working-directory: ./infra/terraform

      - name: tf apply dev
        run: terraform apply  -var-file=./envs/prod.tfvars --auto-approve
        working-directory: ./infra/terraform
